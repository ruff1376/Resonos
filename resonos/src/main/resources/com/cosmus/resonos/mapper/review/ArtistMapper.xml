<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cosmus.resonos.mapper.review.ArtistMapper">

  <resultMap id="ArtistResultMap" type="com.cosmus.resonos.domain.review.Artist">
    <id property="id" column="id"/>
    <result property="name" column="name"/>
    <result property="profileImage" column="profile_image"/>
    <result property="genres" column="genres"/>
    <result property="followerCount" column="follower_count"/>
  </resultMap>

  <select id="selectAll" resultMap="ArtistResultMap">
    SELECT * FROM artist
  </select>

  <select id="selectById" resultMap="ArtistResultMap">
    SELECT * FROM artist WHERE id = #{id}
  </select>

  <insert id="insert">
    INSERT INTO artist (id, name, profile_image, genres)
    VALUES (#{id}, #{name}, #{profileImage}, #{genres})
  </insert>

  <update id="update">
    UPDATE artist
    SET name = #{name},
        profile_image = #{profileImage},
        genres = #{genres}
    WHERE id = #{id}
  </update>

  <delete id="delete" >
    DELETE FROM artist WHERE id = #{id}
  </delete>

  <select id="list" resultMap="ArtistResultMap">
    SELECT * FROM artist
    ORDER BY name ASC
  </select>

  <select id="exists" resultType="int">
    SELECT COUNT(*) FROM artist WHERE id = #{id}
  </select>

  <!-- 해당아티스트의 인기 1위 뮤비url 을 반환 -->
  <select id="selectTopMvUrlByArtist"

        resultType="string">
    SELECT
        IFNULL(NULLIF(mv_url, ''), 'empty_mv_url') AS mv_url
    FROM track
    WHERE artist_id = #{artistId}
    ORDER BY popularity DESC
    LIMIT 1
  </select>

  <select id="selectArtistByTrackId"

    resultMap="ArtistResultMap">
    SELECT a.*
    FROM   artist a
    JOIN   track  t ON a.id = t.artist_id
    WHERE  t.id = #{trackId}
  </select>

  <select id="listPaging" resultMap="ArtistResultMap">
  SELECT * FROM artist
  ORDER BY name ASC
  LIMIT #{offset}, #{size}
  </select>


  <select id="searchList" resultMap="ArtistResultMap">
      SELECT a.*, COUNT(af.id) AS follower_count,
            CASE
                WHEN a.name = #{keyword} THEN 1
                WHEN a.name LIKE CONCAT(#{keyword}, '%') THEN 2
                WHEN a.name LIKE CONCAT('%', #{keyword}, '%') THEN 3
                ELSE 4
            END AS sort_order
      FROM artist a
      LEFT JOIN artist_follow af ON a.id = af.artist_id
      WHERE a.name LIKE CONCAT('%', #{keyword}, '%')
      GROUP BY a.id
      ORDER BY sort_order, follower_count DESC, a.name ASC
      LIMIT 0, 6
  </select>


  <select id="allSearchList" resultMap="ArtistResultMap">
      SELECT a.*, COUNT(af.id) AS follower_count,
            CASE
                WHEN a.name = #{keyword} THEN 1
                WHEN a.name LIKE CONCAT(#{keyword}, '%') THEN 2
                WHEN a.name LIKE CONCAT('%', #{keyword}, '%') THEN 3
                ELSE 4
            END AS sort_order
      FROM artist a
      LEFT JOIN artist_follow af ON a.id = af.artist_id
      WHERE a.name LIKE CONCAT('%', #{keyword}, '%')
      GROUP BY a.id
      ORDER BY sort_order, follower_count DESC, a.name ASC
      LIMIT #{index}, #{size}
  </select>


  <select id="searchCount" resultType="long">
    SELECT IFNULL(COUNT(DISTINCT a.id), 0)
    FROM artist a
    WHERE a.name LIKE CONCAT('%', #{keyword}, '%')
  </select>

  <!-- 전체 아티스트 수 조회 -->
  <select id="count" resultType="long">
  SELECT COUNT(*) FROM artist
  </select>


  <!-- 앨범id로 아티스트 객체 -->
  <select id="findArtistByAlbumId"

        resultMap="ArtistResultMap">
  SELECT ar.*
  FROM album a
  JOIN artist ar ON a.artist_id = ar.id
  WHERE a.id = #{albumId}
  </select>

  <!-- 마이페이지: 팔로우한 아티스트 3건 조회 -->
  <select id="followingArtistsTop3" resultMap="ArtistResultMap">
    SELECT a.*, af.created_at
    FROM artist_follow af
      INNER JOIN artist a ON af.artist_id = a.id
    WHERE af.user_id = #{id}
    ORDER BY af.created_at
    LIMIT 3
  </select>

  <!-- 마이페이지: 팔로우한 아티스트 전체 조회 -->
  <select id="followingArtists" resultMap="ArtistResultMap">
    SELECT a.*, af.created_at
    FROM artist_follow af
      INNER JOIN artist a ON af.artist_id = a.id
    WHERE af.user_id = #{id}
    <if test="keyword != null and keyword != ''">
      AND (
        a.name LIKE CONCAT('%', #{keyword}, '%')
      )
    </if>
    ORDER BY
    <choose>
      <when test="keyword != null and keyword != ''">
        CASE
          WHEN a.name LIKE CONCAT(#{keyword}, '%') THEN 0       -- 제목이 keyword로 시작
          WHEN a.name LIKE CONCAT('%', #{keyword}, '%') THEN 1  -- 제목에 keyword 포함
          ELSE 2
        END,
        af.created_at DESC
      </when>
      <otherwise>
        af.created_at DESC
      </otherwise>
    </choose>
    LIMIT #{offset}, #{limit}
  </select>

  <!-- 마이페이지: 팔로우한 아티스트 수 조회 -->
  <select id="countFollowingArtists" resultType="int">
    SELECT count(*)
    FROM artist_follow af
      INNER JOIN artist a ON af.artist_id = a.id
    WHERE af.user_id = #{id}
  </select>
</mapper>

spring.application.name=resonos

# 데이터 소스 - MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/resonos?serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useSSL=false&autoReconnection=true&allowMultiQueries=true
spring.datasource.username=resonos
spring.datasource.password=123456

# Mybatis 설정
# Mybatis 설정 경로      : ~/resources/mybatis-config.xml
# mybatis.config-location=classpath:mybatis-config.xml

# 컬럼명을 변수명으로 자동매핑 :  board_no ➡ boardNo
mybatis.configuration.map-underscore-to-camel-case=true
# resultType 속성에서 dto 객체 (패키지.클래스명) ➡ (클래스명)
mybatis.type-aliases-package=com.cosmus.resonos.domain.*

# Mybatis 매퍼 파일 경로 : ~/메인패키지/mapper/**Mapper.xml
mybatis.mapper-locations=classpath:com/cosmus/resonos/mapper/**/**/**.xml

# PageHelper 설정
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

# true : 테이블 생성 및 데이터 전체 삭제
ddl.init=false

# spotify API 설정
spring.devtools.restart.additional-paths=build/classes/java/main,build/resources/main
# spring.devtools.restart.exclude=bin/**


# 카카오 로그인 설정
spring.security.oauth2.client.registration.kakao.client-id=75195ce910168d549fd99c917452abea
spring.security.oauth2.client.registration.kakao.client-secret=jQeWwGwpoWpEKnp4HVd6pcr3sqJz2I9N

spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,profile_image
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# 네이버 로그인 설정
spring.security.oauth2.client.registration.naver.client-id=f2DNpb12C5nuS3VJUXzN
spring.security.oauth2.client.registration.naver.client-secret=nls8LEZAzM
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# 구글 로그인 설정
spring.security.oauth2.client.registration.google.client-id=3913278100-422ccgq1u0lbcpn14dla5iv9bc6fh813.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.profiles.active=dev

# Brevo 설정
spring.mail.host=smtp-relay.brevo.com
spring.mail.port=587
spring.mail.username=9286be001@smtp-brevo.com
spring.mail.password=syKrnaOCZwWNpxIM
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8

# JWT 시크릿 키
com.cosmus.resonos.secret-key=2Pyq[MyRMH(DxP'K)ONVI\LB29GD:xbB]?`\{ogZ[}#*)hx7/~68FxK2)HJdCPZ#A&[CBg{v9+T2c122